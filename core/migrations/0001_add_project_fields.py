# Generated by Django 5.1.4 on 2024-12-31 12:06

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Facilities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('unit', models.CharField(choices=[('kg', 'Kilograms'), ('m', 'Meters'), ('pcs', 'Pieces'), ('l', 'Liters')], max_length=10)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('minimum_stock', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductionProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('PRODUCTION', 'Production'), ('QC', 'Quality Control'), ('DISPATCH', 'Dispatch'), ('SITE', 'Site'), ('ENGINEERING', 'Engineering')], default='PRODUCTION', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Process',
                'verbose_name_plural': 'Processes',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimation_number', models.CharField(default='EST-000', max_length=20, unique=True, verbose_name='Estimation #')),
                ('project_number', models.CharField(db_index=True, help_text='Project number (e.g., 230)', max_length=10, unique=True, verbose_name='Project #')),
                ('name', models.CharField(max_length=255, verbose_name='Project Name')),
                ('project_manager', models.CharField(blank=True, max_length=100, null=True, verbose_name='Project Manager')),
                ('client_name', models.CharField(max_length=100, verbose_name='Client Name')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Contract Date')),
                ('down_payment_date', models.DateField(blank=True, null=True, verbose_name='Down Payment Date')),
                ('planned_start_date', models.DateField(blank=True, null=True, verbose_name='Planned Start Date')),
                ('planned_end_date', models.DateField(blank=True, null=True, verbose_name='Planned End Date')),
                ('actual_start_date', models.DateField(blank=True, null=True, verbose_name='Actual Start Date')),
                ('actual_end_date', models.DateField(blank=True, null=True, verbose_name='Actual End Date')),
                ('structure_type', models.CharField(choices=[('INDUSTRIAL', 'Industrial Building'), ('COMMERCIAL', 'Commercial Building'), ('RESIDENTIAL', 'Residential Building'), ('WAREHOUSE', 'Warehouse'), ('OTHER', 'Other')], default='INDUSTRIAL', max_length=50, verbose_name='Structure Type')),
                ('number_of_structures', models.IntegerField(default=1, verbose_name='No. of structures')),
                ('erection_subcontractor', models.CharField(blank=True, max_length=100, verbose_name='Erection Subcontractor')),
                ('down_payment', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Down Payment')),
                ('down_payment_ack', models.BooleanField(default=False, verbose_name='Down Payment Ack')),
                ('payment_2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Payment 2')),
                ('payment_2_ack', models.BooleanField(default=False, verbose_name='Payment 2 Ack')),
                ('payment_3', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Payment 3')),
                ('payment_3_ack', models.BooleanField(default=False, verbose_name='Payment 3 Ack')),
                ('payment_4', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Payment 4')),
                ('payment_4_ack', models.BooleanField(default=False, verbose_name='Payment 4 Ack')),
                ('payment_5', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Payment 5')),
                ('payment_5_ack', models.BooleanField(default=False, verbose_name='Payment 5 Ack')),
                ('preliminary_retention', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preliminary Retention')),
                ('ho_retention', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='H.O Retention')),
                ('incoterm', models.CharField(choices=[('EXW', 'Ex Works'), ('FOB', 'Free on Board'), ('CIF', 'Cost, Insurance, and Freight'), ('DDP', 'Delivered Duty Paid')], default='EXW', max_length=20, verbose_name='Incoterm')),
                ('scope_of_work', models.TextField(default='', verbose_name='Scope of Work')),
                ('project_nature', models.CharField(choices=[('NEW', 'New Construction'), ('EXPANSION', 'Expansion'), ('RENOVATION', 'Renovation'), ('MAINTENANCE', 'Maintenance')], default='NEW', max_length=20, verbose_name='Project Nature')),
                ('contractual_tonnage', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Contractual Tonnage')),
                ('engineering_tonnage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Engineering Tonnage')),
                ('galvanized', models.BooleanField(default=False, verbose_name='Galvanized')),
                ('galvanization_microns', models.IntegerField(blank=True, null=True, verbose_name='Galvanization Microns')),
                ('area', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Area')),
                ('m2_per_ton', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='m2/Ton')),
                ('paint_coat_1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Paint Coat 1')),
                ('coat_1_microns', models.IntegerField(blank=True, null=True, verbose_name='Coat 1 - Microns')),
                ('coat_1_liters_needed', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Liters Needed')),
                ('paint_coat_2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Paint Coat 2')),
                ('coat_2_microns', models.IntegerField(blank=True, null=True, verbose_name='Coat 2 - Microns')),
                ('coat_2_liters_needed', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Liters Needed')),
                ('paint_coat_3', models.CharField(blank=True, max_length=100, null=True, verbose_name='Paint Coat 3')),
                ('coat_3_microns', models.IntegerField(blank=True, null=True, verbose_name='Coat 3 - Microns')),
                ('coat_3_liters_needed', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Liters Needed')),
                ('paint_coat_4', models.CharField(blank=True, max_length=100, null=True, verbose_name='Paint Coat 4')),
                ('coat_4_microns', models.IntegerField(blank=True, null=True, verbose_name='Coat 4 - Microns')),
                ('coat_4_liters_needed', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Liters Needed')),
                ('top_coat_ral_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Top Coat RAL Number')),
                ('welding_process', models.CharField(choices=[('SMAW', 'Shielded Metal Arc Welding'), ('GMAW', 'Gas Metal Arc Welding'), ('FCAW', 'Flux Cored Arc Welding'), ('SAW', 'Submerged Arc Welding')], default='SMAW', max_length=20, verbose_name='Welding Process')),
                ('welding_wire_aws_class', models.CharField(default='', max_length=50, verbose_name='Welding Wire AWS Class')),
                ('pqr_no', models.CharField(default='', max_length=50, verbose_name='PQR NO')),
                ('wps_no', models.CharField(default='', max_length=50, verbose_name='WPS NO')),
                ('standard_code', models.CharField(default='', max_length=50, verbose_name='Standard Code')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold')], default='not_started', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['project_number'],
            },
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('role', models.CharField(choices=[('WORKER', 'Worker'), ('TEAM_LEADER', 'Team Leader'), ('SUPERVISOR', 'Supervisor'), ('MANAGER', 'Manager')], default='WORKER', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personnel', to='core.facility')),
            ],
            options={
                'verbose_name_plural': 'Personnel',
                'ordering': ['facility', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='ProductionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_designation', models.CharField(max_length=100)),
                ('production_date', models.DateField()),
                ('produced_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.facility')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.productionprocess')),
            ],
            options={
                'verbose_name': 'Production Log',
                'verbose_name_plural': 'Production Logs',
                'ordering': ['-production_date'],
            },
        ),
        migrations.CreateModel(
            name='MaterialUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_used', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.material')),
                ('production_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.productionlog')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='core.facility')),
                ('team_leader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_teams', to='core.personnel')),
            ],
            options={
                'ordering': ['facility', 'name'],
                'unique_together': {('name', 'facility')},
            },
        ),
        migrations.AddField(
            model_name='productionlog',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.productionteam'),
        ),
        migrations.AddField(
            model_name='personnel',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='core.productionteam'),
        ),
        migrations.AddField(
            model_name='productionlog',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='production_logs', to='core.project'),
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Building A', help_text='Building name (e.g., "Building A", "Building B")', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buildings', to='core.project')),
            ],
            options={
                'verbose_name': 'Building',
                'verbose_name_plural': 'Buildings',
                'ordering': ['project__project_number', 'name'],
                'unique_together': {('project', 'name')},
            },
        ),
        migrations.CreateModel(
            name='RawData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_id', models.CharField(blank=True, editable=False, max_length=255, null=True, unique=True, verbose_name='Row ID')),
                ('building_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Building Name')),
                ('log_designation', models.CharField(max_length=255, verbose_name='Log Designation')),
                ('part_designation', models.CharField(max_length=255, verbose_name='Part Designation')),
                ('assembly_mark', models.CharField(max_length=255, verbose_name='Assembly Mark')),
                ('part_mark', models.CharField(max_length=255, verbose_name='Part Mark')),
                ('name', models.CharField(blank=True, help_text='Part name or description', max_length=255)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity')),
                ('profile', models.CharField(max_length=255, verbose_name='Profile')),
                ('grade', models.CharField(max_length=255, verbose_name='Grade')),
                ('length', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Length(mm)')),
                ('net_area_single', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Net Area(m²)')),
                ('net_area_total', models.DecimalField(decimal_places=2, help_text='Total area from raw data', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Net Area(m²) for all')),
                ('single_part_weight', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Single Part Weight')),
                ('net_weight_total', models.DecimalField(decimal_places=2, help_text='Total weight from raw data', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Net Weight(kg) for all')),
                ('revision', models.CharField(max_length=20, verbose_name='Revision#')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.building')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QualityCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_time', models.DateTimeField(auto_now_add=True)),
                ('parameter', models.CharField(max_length=255)),
                ('measurement', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('specification_min', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('specification_max', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('result', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('pending', 'Pending Review')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('production_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.productionlog')),
                ('raw_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.rawdata')),
            ],
        ),
        migrations.AddIndex(
            model_name='rawdata',
            index=models.Index(fields=['project', 'log_designation'], name='core_rawdat_project_cabb1c_idx'),
        ),
        migrations.AddIndex(
            model_name='rawdata',
            index=models.Index(fields=['building', 'assembly_mark'], name='core_rawdat_buildin_4ee1b8_idx'),
        ),
    ]
